export interface IWaterMarkConfig {
    text?: string;
    sso?: string;
    mode?: 'canvas' | 'svg';
    angle?: number;
    gap?: number;
    fontSize?: number;
    fontFamily?: string;
    color?: string;
    el?: HTMLElement | null;
}
export default class WaterMark {
    options: IWaterMarkConfig;
    resolvedText: string[];
    constructor(options?: IWaterMarkConfig);
    private readonly getPixelRatio;
    private readonly getBaseValue;
    resolveByCanvas(options: {
        resolvedText: string[];
    } & IWaterMarkConfig): Promise<string>;
    resolveBySvg(options: {
        resolvedText: string[];
    } & IWaterMarkConfig): string;
    resolveBackgroundImageUrl(): Promise<{
        url: any;
        width: number;
    }>;
    render(): Promise<void>;
}
export declare const autoInject: (options?: IWaterMarkConfig | undefined) => Promise<void>;
